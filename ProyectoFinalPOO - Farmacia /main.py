# Importaciones de m√≥dulos necesarios
from colorama import Fore, Style, init  # Para darle color al texto en la consola
from medico import Medico  # Clase para manejar datos de m√©dicos
from manejo_medicos import ver_medicos, agregar_medico, eliminar_medico, limpiar_registros, cargar_medicos  # Funciones para m√©dicos
from inventario import Inventario  # Clase para medicamentos
from manejo_inventario import agregar_medicamento, eliminar_medicamento, ver_inventario, modificar_precio, modificar_stock, limpiar_registros, vender_medicamento, cargar_inventario  # Funciones del inventario
from manejo_citas import ver_citas, registrar_cita, cargar_citas, eliminar_cita, limpiar_registros  # Funciones para manejar citas
from manejo_reportes import generar_reporte, cargar_reportes, ver_reportes, limpiar_registros, ver_expediente  # Funciones para los reportes m√©dicos
from paciente import Paciente  # Clase de pacientes

# Men√∫ principal del sistema
def menu():
    while True:
        # Opciones del men√∫
        print(f"\n{Fore.BLUE}üìå MEN√ö PRINCIPAL{Style.RESET_ALL}")
        print("=" * 40)
        print(f"{Fore.YELLOW}1Ô∏è‚É£ M√©dicos{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}2Ô∏è‚É£ Farmacia{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}3Ô∏è‚É£ Citas{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}4Ô∏è‚É£ Reportes{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}5Ô∏è‚É£ Limpiar todos los datos{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}0Ô∏è‚É£ Salir{Style.RESET_ALL}")

        opcion = input(f"\n{Fore.GREEN}‚ö° Selecciona una opci√≥n:{Style.RESET_ALL} ")

        # Navegaci√≥n a submen√∫s
        if opcion == "1":
            menu_medicos()
        elif opcion == "2":
            menu_farmacia()
        elif opcion == "3":
            menu_citas()
        elif opcion == "4":
            menu_reportes()
        elif opcion == "5":
            # Limpia todos los registros de los archivos JSON
            archivos = ["medicos.json", "inventario.json", "citas.json", "reportes.json"]
            for archivo in archivos:
                limpiar_registros(archivo)
        elif opcion == "0":
            print(f"{Fore.MAGENTA}üëã ¬°Hasta luego!{Style.RESET_ALL}")
            break
        else:
            print(f"{Fore.RED}‚ö†Ô∏è Opci√≥n no v√°lida. Int√©ntalo de nuevo.{Style.RESET_ALL}")

# Submen√∫ para gesti√≥n de m√©dicos
def menu_medicos():
    while True:
        print(f"\n{Fore.BLUE}ü©∫ MEN√ö M√âDICOS{Style.RESET_ALL}")
        print("=" * 40)
        print(f"{Fore.YELLOW}1Ô∏è‚É£ Ver lista de m√©dicos{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}2Ô∏è‚É£ Agregar un nuevo m√©dico{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}3Ô∏è‚É£ Eliminar un m√©dico{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}4Ô∏è‚É£ Eliminar registros de m√©dicos{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}0Ô∏è‚É£ Volver al men√∫ principal{Style.RESET_ALL}")

        opcion = input(f"\n{Fore.GREEN}‚ö° Selecciona una opci√≥n:{Style.RESET_ALL} ")

        if opcion == "1":
            ver_medicos()
        elif opcion == "2":
            # Registro de nuevo m√©dico
            nombre = input("üë®‚Äç‚öïÔ∏è Nombre del m√©dico: ")
            edad = input("‚≠ï Edad del m√©dico: ")
            genero = input("üöª G√©nero del m√©dico: ")
            especialidad = input("üî¨ Especialidad: ")
            medico = Medico(nombre, edad, genero, especialidad)
            agregar_medico(medico)
        elif opcion == "3":
            # Eliminaci√≥n de un m√©dico
            ver_medicos()
            nombre = input("‚ùå Nombre del m√©dico a eliminar: ")
            eliminar_medico(nombre)
        elif opcion == "4":
            # Limpia todos los m√©dicos registrados
            limpiar_registros("medicos.json")
        elif opcion == "0":
            break
        else:
            print(f"{Fore.RED}‚ö†Ô∏è Opci√≥n no v√°lida. Int√©ntalo de nuevo.{Style.RESET_ALL}")

# Submen√∫ para farmacia/inventario
def menu_farmacia():
    while True:
        print(f"\n{Fore.BLUE}üíä MEN√ö FARMACIA{Style.RESET_ALL}")
        print("=" * 40)
        print(f"{Fore.YELLOW}1Ô∏è‚É£ Ver lista de medicamentos{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}2Ô∏è‚É£ Agregar medicamento{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}3Ô∏è‚É£ Eliminar medicamento{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}4Ô∏è‚É£ Modificar precio{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}5Ô∏è‚É£ Modificar stock{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}6Ô∏è‚É£ Vender medicamento{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}7Ô∏è‚É£ Eliminar registros de inventario{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}0Ô∏è‚É£ Volver al men√∫ principal{Style.RESET_ALL}")

        opcion = input(f"\n{Fore.GREEN}Selecciona una opci√≥n:{Style.RESET_ALL} ")

        if opcion == "1":
            ver_inventario()
        elif opcion == "2":
            # Agrega nuevo medicamento al inventario
            nombre = input("üíä Nombre del medicamento: ")
            cantidad = int(input("üì¶ Cantidad disponible: "))
            precio = float(input("üí≤ Precio Unitario: "))
            medicamento = Inventario(nombre, cantidad, precio)
            agregar_medicamento(medicamento)
        elif opcion == "3":
            ver_inventario()
            nombre = input("‚ùå Nombre del medicamento a eliminar: ")
            eliminar_medicamento(nombre)
        elif opcion == "4":
            nombre = input("üìù Nombre del medicamento a modificar el precio: ")
            nuevo_precio = float(input("üí≤ Nuevo precio: "))
            modificar_precio(nombre, nuevo_precio)
        elif opcion == "5":
            nombre = input("üìù Nombre del medicamento a modificar el stock: ")
            nuevo_stock = int(input("üì¶ Nueva cantidad: "))
            modificar_stock(nombre, nuevo_stock)
        elif opcion == "6":
            # Procesa la venta de m√∫ltiples medicamentos
            inventario = cargar_inventario()
            lista_medicamentos = [item["nombre"] for item in inventario]
            ver_inventario()
            medicamentos_a_vender = []
            print("\nüõí Agrega los medicamentos que deseas comprar (escribe 'fin' para terminar):")
            while True:
                nombre_med = input("üíä Nombre del medicamento: ")
                if nombre_med.lower() == "fin":
                    break
                if nombre_med not in lista_medicamentos:
                    print(f"{Fore.RED}‚ö†Ô∏è '{nombre_med}' no est√° en el inventario. Intenta nuevamente.{Style.RESET_ALL}")
                    continue
                cantidad_med = int(input("üì¶ Cantidad a vender: "))
                medicamentos_a_vender.append({"nombre": nombre_med, "cantidad": cantidad_med})
            for medicamento in medicamentos_a_vender:
                vender_medicamento(medicamento["nombre"], medicamento["cantidad"])
        elif opcion == "7":
            limpiar_registros("inventario.json")
        elif opcion == "0":
            break
        else:
            print(f"{Fore.RED}‚ö†Ô∏è Opci√≥n no v√°lida. Int√©ntalo de nuevo.{Style.RESET_ALL}")

# Submen√∫ para gestionar citas m√©dicas
def menu_citas():
    while True:
        print(f"\n{Fore.BLUE}üìÖ MEN√ö CITAS{Style.RESET_ALL}")
        print("=" * 40)
        print(f"{Fore.YELLOW}1Ô∏è‚É£ Registrar nueva cita{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}2Ô∏è‚É£ Ver todas las citas{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}3Ô∏è‚É£ Eliminar una cita{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}4Ô∏è‚É£ Eliminar registros de citas{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}0Ô∏è‚É£ Volver al men√∫ principal{Style.RESET_ALL}")

        opcion = input(f"\n{Fore.GREEN}Selecciona una opci√≥n:{Style.RESET_ALL} ")

        if opcion == "1":
            # Registro de cita nueva con datos del paciente
            nombre = input("üìù Nombre del paciente: ")
            edad = input("‚≠ï Edad del paciente: ")
            genero = input("üöª G√©nero del paciente: ")
            peso = input("‚öñÔ∏è Peso del paciente: ")
            estatura = input("üìè Estatura del paciente: ")
            curp = input("üÜî CURP del paciente: ")
            sintomas = input("ü§ï S√≠ntomas: ")
            paciente = Paciente(nombre, edad, genero, peso, estatura, curp, sintomas)
            registrar_cita(paciente)
        elif opcion == "2":
            ver_citas()
        elif opcion == "3":
            ver_citas()
            curp = input("‚ùå CURP del paciente a eliminar: ")
            eliminar_cita(curp)
        elif opcion == "4":
            limpiar_registros("citas.json")
        elif opcion == "0":
            break
        else:
            print(f"{Fore.RED}‚ö†Ô∏è Opci√≥n no v√°lida. Int√©ntalo de nuevo.{Style.RESET_ALL}")

# Submen√∫ para reportes y expedientes m√©dicos
def menu_reportes():
    while True:
        print("\nüìë MENU DE REPORTES")
        print("=" * 40)
        print("1Ô∏è‚É£ Generar Reporte")
        print("2Ô∏è‚É£ Ver Reportes")
        print("3Ô∏è‚É£ Ver Expediente de un Paciente")
        print("4Ô∏è‚É£ Limpiar Registros")
        print("0Ô∏è‚É£ Volver al Men√∫ Principal")
        opcion = input("üîπ Selecciona una opci√≥n: ")

        if opcion == "1":
            citas = cargar_citas()
            if not citas:
                print(f"{Fore.RED}‚ö†Ô∏è No hay citas registradas, no se puede generar un reporte.{Style.RESET_ALL}")
                continue
            ver_citas()
            curp = input("üÜî Ingresa la CURP del paciente para el reporte: ")
            paciente = next((cita for cita in citas if cita["curp"] == curp), None)
            if not paciente:
                print(f"{Fore.RED}‚ö†Ô∏è No se encontr√≥ ninguna cita con la CURP {curp}.{Style.RESET_ALL}")
                continue
            diagnostico = input("ü©∫ Diagn√≥stico: ")
            medicos = cargar_medicos()
            lista_medicos = [medico["nombre"] for medico in medicos]
            ver_medicos()
            while True:
                medico = input("üë®‚Äç‚öïÔ∏è Nombre del m√©dico que genera el reporte: ")
                if medico in lista_medicos:
                    break
                print(f"{Fore.RED}‚ö†Ô∏è El nombre ingresado no coincide con un m√©dico registrado. Intenta nuevamente.{Style.RESET_ALL}")
            medicamentos = []
            print("\nüíä Agrega los medicamentos recetados (escribe 'fin' para terminar):")
            while True:
                nombre_med = input("   üíä Nombre del medicamento: ")
                if nombre_med.lower() == "fin":
                    break
                cantidad_med = int(input("   üì¶ Cantidad recetada: "))
                medicamentos.append({"nombre": nombre_med, "cantidad": cantidad_med})
            generar_reporte(curp, diagnostico, medicamentos, medico)
        elif opcion == "2":
            ver_reportes()
        elif opcion == "3":
            curp_expediente = input("üìë Ingresa la CURP del paciente para ver su expediente: ")
            reportes = cargar_reportes()
            existe_expediente = any(r["curp"] == curp_expediente for r in reportes)
            if existe_expediente:
                ver_expediente(curp_expediente)
            else:
                print(f"{Fore.RED}‚ö†Ô∏è No se encontraron reportes para la CURP {curp_expediente}.{Style.RESET_ALL}")
        elif opcion == "4":
            limpiar_registros()
        elif opcion == "0":
            break
        else:
            print(f"{Fore.RED}‚ö†Ô∏è Opci√≥n inv√°lida, intenta nuevamente.{Style.RESET_ALL}")

# Llama al men√∫ principal al iniciar
menu()
